{"ast":null,"code":"import _slicedToArray from \"/Users/chaehyun/Documents/GitHub/codrops-r3f-mirrors/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/chaehyun/Documents/GitHub/codrops-r3f-mirrors/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/chaehyun/Documents/GitHub/codrops-r3f-mirrors/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/chaehyun/Documents/GitHub/codrops-r3f-mirrors/src/Scene3.js\";\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport * as THREE from 'three';\nimport { useResource } from 'react-three-fiber';\nimport { Text, Box, Octahedron, Plane } from '@react-three/drei';\nimport { Physics, useBox, usePlane } from '@react-three/cannon';\nimport useSlerp from './use-slerp';\nimport useRenderTarget from './use-render-target';\nimport useLayers from './use-layers';\nvar textProps = {\n  fontSize: 4,\n  font: 'https://fonts.gstatic.com/s/kanit/v7/nKKU-Go6G5tXcr4WPBWnVac.woff'\n};\nvar BG_COLOR = '#921212';\nvar PEDRO_COLOR = \"#aaa\";\nvar CLICKHERE_COLOR = \"#f70131\";\nvar REFLECTION_SIDE_COLOR = \"#929292\";\nvar DARK_SIDE_COLOR = \"#921212\";\n\nfunction Title(_ref) {\n  var layers = _ref.layers,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? '' : _ref$label,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 0xffffff : _ref$color,\n      props = _objectWithoutProperties(_ref, [\"layers\", \"label\", \"color\"]);\n\n  var group = useRef();\n  useEffect(function () {\n    group.current.lookAt(0, 0, 0);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"group\", Object.assign({}, props, {\n    ref: group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Text, Object.assign({\n    castShadow: true,\n    name: label,\n    depthTest: false,\n    \"material-toneMapped\": false\n  }, textProps, {\n    layers: layers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), label, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction TitleCopies(_ref2) {\n  var _this = this;\n\n  var layers = _ref2.layers,\n      label = _ref2.label,\n      color = _ref2.color,\n      props = _objectWithoutProperties(_ref2, [\"layers\", \"label\", \"color\"]);\n\n  var vertices = useMemo(function () {\n    var y = new THREE.CircleGeometry(10, 4, 4);\n    return y.vertices;\n  }, []);\n  return /*#__PURE__*/React.createElement(\"group\", Object.assign({\n    name: \"titleCopies\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), vertices.map(function (vertex, i) {\n    return /*#__PURE__*/React.createElement(Title, {\n      name: 'titleCopy-' + i,\n      label: label,\n      position: vertex,\n      layers: layers,\n      color: color,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    });\n  }));\n}\n\nfunction PhysicalWalls(props) {\n  usePlane(function () {\n    return _objectSpread({}, props);\n  }); // back wall\n\n  usePlane(function () {\n    return {\n      position: [0, 0, -20]\n    };\n  });\n  return /*#__PURE__*/React.createElement(Plane, Object.assign({\n    args: [1000, 1000]\n  }, props, {\n    receiveShadow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"shadowMaterial\", {\n    transparent: true,\n    opacity: 0.2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction PhysicalTitle(props) {\n  useBox(function () {\n    return _objectSpread({}, props);\n  });\n  return null;\n}\n\nfunction Mirror(_ref3) {\n  var sideMaterial = _ref3.sideMaterial,\n      reflectionMaterial = _ref3.reflectionMaterial,\n      props = _objectWithoutProperties(_ref3, [\"sideMaterial\", \"reflectionMaterial\"]);\n\n  var _useBox = useBox(function () {\n    return props;\n  }),\n      _useBox2 = _slicedToArray(_useBox, 2),\n      ref = _useBox2[0],\n      api = _useBox2[1];\n\n  return /*#__PURE__*/React.createElement(Box, {\n    ref: ref,\n    args: props.args,\n    onClick: function onClick() {\n      return api.applyImpulse([0, 0, -50], [0, 0, 0]);\n    },\n    receiveShadow: true,\n    castShadow: true,\n    material: [sideMaterial, sideMaterial, sideMaterial, sideMaterial, reflectionMaterial, sideMaterial],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction Mirrors(_ref4) {\n  var _this2 = this;\n\n  var envMap = _ref4.envMap;\n  var ROWS = 4;\n  var COLS = 10;\n  var BOX_SIZE = 2;\n  var sideMaterial = useResource();\n  var reflectionMaterial = useResource();\n  var mirrorsData = useMemo(function () {\n    return new Array(ROWS * COLS).fill().map(function (_, index) {\n      return {\n        mass: 1,\n        material: {\n          friction: 1,\n          restitution: 0\n        },\n        args: [BOX_SIZE, BOX_SIZE, BOX_SIZE],\n        position: [-COLS + index * BOX_SIZE % (BOX_SIZE * COLS), -1 + BOX_SIZE * Math.floor(index * BOX_SIZE / (BOX_SIZE * COLS)), 0]\n      };\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"meshPhysicalMaterial\", {\n    ref: sideMaterial,\n    color: DARK_SIDE_COLOR,\n    envMap: envMap,\n    roughness: 0.8,\n    metalness: 0.2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshPhysicalMaterial\", {\n    ref: reflectionMaterial,\n    envMap: envMap,\n    roughness: 0,\n    metalness: 1,\n    color: REFLECTION_SIDE_COLOR,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    name: \"mirrors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, mirrorsData.map(function (mirror, index) {\n    return /*#__PURE__*/React.createElement(Mirror, Object.assign({\n      key: \"0\".concat(index),\n      name: \"mirror-\".concat(index)\n    }, mirror, {\n      sideMaterial: sideMaterial.current,\n      reflectionMaterial: reflectionMaterial.current,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }));\n  })));\n}\n\nfunction Background(_ref5) {\n  var layers = _ref5.layers,\n      props = _objectWithoutProperties(_ref5, [\"layers\"]);\n\n  var ref = useLayers(layers);\n  return /*#__PURE__*/React.createElement(Octahedron, Object.assign({\n    ref: ref,\n    name: \"background\",\n    args: [100]\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    color: BG_COLOR,\n    side: THREE.BackSide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction NextPage() {\n  alert(\"hi\");\n}\n\nexport default function Scene() {\n  var group = useSlerp();\n\n  var _useRenderTarget = useRenderTarget(),\n      _useRenderTarget2 = _slicedToArray(_useRenderTarget, 2),\n      cubeCamera = _useRenderTarget2[0],\n      renderTarget = _useRenderTarget2[1];\n\n  var newLocal = \"title\";\n  var newLocal_1 = 0;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"group\", {\n    name: \"sceneContainer\",\n    ref: group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Background, {\n    layers: [0, 11],\n    position: [0, 0, -5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    layers: [newLocal_1],\n    name: \"cubeCamera\",\n    ref: cubeCamera,\n    position: [0, 0, 0],\n    args: [0.1, 100, renderTarget],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    name: \"title\",\n    label: \"BLANK\",\n    position: [0, 2, -10],\n    color: \"hotpink\",\n    onClick: NextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TitleCopies, {\n    position: [0, 2, -5],\n    rotation: [0, 0, 0],\n    layers: [11],\n    label: \"FULL\",\n    color: PEDRO_COLOR,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    layers: [11],\n    name: newLocal,\n    label: \"CLICK HERE\",\n    position: [0, 2, 24],\n    scale: [-1, 1, 1],\n    color: CLICKHERE_COLOR,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Physics, {\n    gravity: [0, -10, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Mirrors, {\n    envMap: renderTarget.texture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PhysicalWalls, {\n    rotation: [-Math.PI / 2, 0, 0],\n    position: [0, -2, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PhysicalTitle, {\n    args: [13, 2.5, 0.1],\n    position: [0, 2.25, -10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"pointLight\", {\n    castShadow: true,\n    position: [0, 10, 2],\n    intensity: 4,\n    \"shadow-mapSize-width\": 1024,\n    \"shadow-mapSize-height\": 1024,\n    \"shadow-camera-far\": 100,\n    \"shadow-camera-left\": -10,\n    \"shadow-camera-right\": 10,\n    \"shadow-camera-top\": 10,\n    \"shadow-camera-bottom\": -10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/chaehyun/Documents/GitHub/codrops-r3f-mirrors/src/Scene3.js"],"names":["React","useEffect","useMemo","useRef","THREE","useResource","Text","Box","Octahedron","Plane","Physics","useBox","usePlane","useSlerp","useRenderTarget","useLayers","textProps","fontSize","font","BG_COLOR","PEDRO_COLOR","CLICKHERE_COLOR","REFLECTION_SIDE_COLOR","DARK_SIDE_COLOR","Title","layers","label","color","props","group","current","lookAt","TitleCopies","vertices","y","CircleGeometry","map","vertex","i","PhysicalWalls","position","PhysicalTitle","Mirror","sideMaterial","reflectionMaterial","ref","api","args","applyImpulse","Mirrors","envMap","ROWS","COLS","BOX_SIZE","mirrorsData","Array","fill","_","index","mass","material","friction","restitution","Math","floor","mirror","Background","BackSide","NextPage","alert","Scene","cubeCamera","renderTarget","newLocal","newLocal_1","texture","PI"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useRef } from 'react'\nimport * as THREE from 'three'\nimport { useResource } from 'react-three-fiber'\nimport { Text, Box, Octahedron, Plane } from '@react-three/drei'\nimport { Physics, useBox, usePlane } from '@react-three/cannon'\n\nimport useSlerp from './use-slerp'\nimport useRenderTarget from './use-render-target'\nimport useLayers from './use-layers'\n\nconst textProps = {\n  fontSize: 4,\n  font: 'https://fonts.gstatic.com/s/kanit/v7/nKKU-Go6G5tXcr4WPBWnVac.woff'\n}\n\nconst BG_COLOR = '#921212'\nconst PEDRO_COLOR = \"#aaa\"\nconst CLICKHERE_COLOR = \"#f70131\"\nconst REFLECTION_SIDE_COLOR = \"#929292\"\nconst DARK_SIDE_COLOR = \"#921212\"\n\nfunction Title({ layers, label = '', color = 0xffffff, ...props }) {\n  const group = useRef()\n\n  useEffect(() => {\n    group.current.lookAt(0, 0, 0)\n  }, [])\n\n  return (\n    <group {...props} ref={group}>\n      <Text castShadow name={label} depthTest={false} material-toneMapped={false} {...textProps} layers={layers}>\n        {label}\n        <meshBasicMaterial color={color} />\n      </Text>\n    </group>\n  )\n}\n\nfunction TitleCopies({ layers, label, color, ...props }) {\n  const vertices = useMemo(() => {\n    const y = new THREE.CircleGeometry(10, 4, 4)\n    return y.vertices\n  }, [])\n\n  return (\n    <group name=\"titleCopies\" {...props}>\n      {vertices.map((vertex, i) => (\n        <Title name={'titleCopy-' + i} label={label} position={vertex} layers={layers} color={color} />\n      ))}\n    </group>\n  )\n}\n\nfunction PhysicalWalls(props) {\n  usePlane(() => ({ ...props }))\n\n  // back wall\n  usePlane(() => ({ position: [0, 0, -20] }))\n\n  return (\n    <Plane args={[1000, 1000]} {...props} receiveShadow>\n      <shadowMaterial transparent opacity={0.2} />\n    </Plane>\n  )\n}\n\nfunction PhysicalTitle(props) {\n  useBox(() => ({ ...props }))\n  return null\n}\n\nfunction Mirror({ sideMaterial, reflectionMaterial, ...props }) {\n  const [ref, api] = useBox(() => props)\n\n  return (\n    <Box\n      ref={ref}\n      args={props.args}\n      onClick={() => api.applyImpulse([0, 0, -50], [0, 0, 0])}\n      receiveShadow\n      castShadow\n      material={[sideMaterial, sideMaterial, sideMaterial, sideMaterial, reflectionMaterial, sideMaterial]}\n    />\n  )\n}\n\nfunction Mirrors({ envMap }) {\n  const ROWS = 4\n  const COLS = 10\n  const BOX_SIZE = 2\n\n  const sideMaterial = useResource()\n  const reflectionMaterial = useResource()\n\n  const mirrorsData = useMemo(\n    () =>\n      new Array(ROWS * COLS).fill().map((_, index) => ({\n        mass: 1,\n        material: { friction: 1, restitution: 0 },\n        args: [BOX_SIZE, BOX_SIZE, BOX_SIZE],\n        position: [\n          -COLS + ((index * BOX_SIZE) % (BOX_SIZE * COLS)),\n          -1 + BOX_SIZE * Math.floor((index * BOX_SIZE) / (BOX_SIZE * COLS)),\n          0\n        ]\n      })),\n    []\n  )\n\n  return (\n    <>\n      <meshPhysicalMaterial ref={sideMaterial} color={DARK_SIDE_COLOR} envMap={envMap} roughness={0.8} metalness={0.2} />\n      <meshPhysicalMaterial ref={reflectionMaterial} envMap={envMap} roughness={0} metalness={1} color={REFLECTION_SIDE_COLOR} />\n      <group name=\"mirrors\">\n        {mirrorsData.map((mirror, index) => (\n          <Mirror\n            key={`0${index}`}\n            name={`mirror-${index}`}\n            {...mirror}\n            sideMaterial={sideMaterial.current}\n            reflectionMaterial={reflectionMaterial.current}\n          />\n        ))}\n      </group>\n    </>\n  )\n}\n\nfunction Background({ layers, ...props }) {\n  const ref = useLayers(layers)\n  return (\n    <Octahedron ref={ref} name=\"background\" args={[100]} {...props}>\n      <meshBasicMaterial color={BG_COLOR} side={THREE.BackSide} />\n    </Octahedron>\n  )\n}\n\nfunction NextPage(){\n  alert(\"hi\")\n}\n\nexport default function Scene() {\n  const group = useSlerp()\n  const [cubeCamera, renderTarget] = useRenderTarget()\n\n  const newLocal = \"title\"\n  const newLocal_1 = 0\n  return (\n    <>\n      <group name=\"sceneContainer\" ref={group}>\n        <Background layers={[0, 11]} position={[0, 0, -5]} />\n        <cubeCamera\n          layers={[newLocal_1]}\n          name=\"cubeCamera\"\n          ref={cubeCamera}\n          position={[0, 0, 0]}\n          args={[0.1, 100, renderTarget]}\n        />\n\n        <Title name=\"title\" label=\"BLANK\" position={[0, 2, -10]} color={\"hotpink\"} onClick={NextPage} />\n        <TitleCopies position={[0, 2, -5]} rotation={[0, 0, 0]} layers={[11]} label=\"FULL\"  color={PEDRO_COLOR} />\n\n        <Title layers={[11]} name={newLocal} label=\"CLICK HERE\" position={[0, 2, 24]} scale={[-1, 1, 1]} color={CLICKHERE_COLOR} />\n\n        <Physics gravity={[0, -10, 0]}>\n          <Mirrors envMap={renderTarget.texture} />\n          <PhysicalWalls rotation={[-Math.PI / 2, 0, 0]} position={[0, -2, 0]} />\n          <PhysicalTitle args={[13, 2.5, 0.1]} position={[0, 2.25, -10]} />\n        </Physics>\n      </group>\n\n      <pointLight\n        castShadow\n        position={[0, 10, 2]}\n        intensity={4}\n        shadow-mapSize-width={1024}\n        shadow-mapSize-height={1024}\n        shadow-camera-far={100}\n        shadow-camera-left={-10}\n        shadow-camera-right={10}\n        shadow-camera-top={10}\n        shadow-camera-bottom={-10}\n      />\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}